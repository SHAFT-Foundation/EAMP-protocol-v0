[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eamp-python-sdk"
version = "1.0.0"
description = "Official Python SDK for the Extended Accessibility Metadata Protocol (EAMP)"
authors = [{name = "Shaft Finance", email = "hello@shaft.finance"}]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "accessibility",
    "eamp",
    "metadata",
    "wcag",
    "ai-agents",
    "assistive-technology",
    "pydantic"
]
dependencies = [
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "websockets>=11.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "aioresponses>=0.7.4",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "aioresponses>=0.7.4",
]

[project.urls]
homepage = "https://github.com/shaft-finance/eamp-protocol"
repository = "https://github.com/shaft-finance/eamp-protocol.git"
documentation = "https://eamp.shaft.finance"
issues = "https://github.com/shaft-finance/eamp-protocol/issues"

[tool.hatch.build.targets.wheel]
packages = ["eamp"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=eamp --cov-report=term --cov-report=html --cov-report=xml"
testpaths = [
    "tests",
]
asyniciomode = "auto"

[tool.coverage.run]
source = ["eamp"]
omit = [
    "tests/*",
    "*/test_*.py",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\.)?abstractmethod"
]
show_missing = true
precision = 2

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["eamp"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
strict = true
files = ["eamp", "tests"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]